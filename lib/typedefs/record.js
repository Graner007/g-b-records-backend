"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
var apollo_server_express_1 = require("apollo-server-express");
var typeDefs = apollo_server_express_1.gql(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  scalar DateTime \n\n  type Record {\n    id: ID!\n    name: String!\n    description: String!\n    releaseDate: DateTime!\n    albumCover: String!\n    price: Int!\n    leftInStock: Int!\n    artist: Artist!\n    genres: [Genre!]!\n    wishlist: [Wishlist!]!\n    isInWishlist: Boolean\n  }\n\n  type Category {\n    records: [Record!]!\n    count: Int!\n    minPrice: Int!\n    maxPrice: Int!\n  }\n\n  input RecordOrderByInput {\n    releaseDate: Sort\n    price: Sort\n    name: Sort\n  }\n\n  enum Sort {\n      asc\n      desc\n  }\n\n  extend type Query {\n    records: [Record!]!\n    record(recordId: Int!): Record!\n    recordByName(recordName: String!): Record!\n    category(filter: String, skip: Int, take: Int, orderBy: RecordOrderByInput, min: Int, max: Int): Category!\n    recordsBetweenTwoPrice(min: Int!, max: Int!): [Record!]!\n    recommendedRecords: [Record!]!\n    searchRecords(searchPhrase: String!): [Record!]!\n  }\n"], ["\n  scalar DateTime \n\n  type Record {\n    id: ID!\n    name: String!\n    description: String!\n    releaseDate: DateTime!\n    albumCover: String!\n    price: Int!\n    leftInStock: Int!\n    artist: Artist!\n    genres: [Genre!]!\n    wishlist: [Wishlist!]!\n    isInWishlist: Boolean\n  }\n\n  type Category {\n    records: [Record!]!\n    count: Int!\n    minPrice: Int!\n    maxPrice: Int!\n  }\n\n  input RecordOrderByInput {\n    releaseDate: Sort\n    price: Sort\n    name: Sort\n  }\n\n  enum Sort {\n      asc\n      desc\n  }\n\n  extend type Query {\n    records: [Record!]!\n    record(recordId: Int!): Record!\n    recordByName(recordName: String!): Record!\n    category(filter: String, skip: Int, take: Int, orderBy: RecordOrderByInput, min: Int, max: Int): Category!\n    recordsBetweenTwoPrice(min: Int!, max: Int!): [Record!]!\n    recommendedRecords: [Record!]!\n    searchRecords(searchPhrase: String!): [Record!]!\n  }\n"])));
exports.default = typeDefs;
var templateObject_1;
